name: Package distribution workflow
on:
  workflow_call:
    inputs:
      build_all:
        description: "If the triggering workflow is running in build-all-components mode"
        type: boolean
        required: true
      build_version:
        description: "Specifies the build version to apply to all binaries produced by this workflow"
        type: string
        required: true
      platform_version:
        description: "Specifies the current Geti platform version"
        type: string
        required: true
      publish_binaries:
        description: "Enable pushing Docker images and Helm charts"
        type: boolean
        default: false
      ref:
        description: "The branch, tag or SHA to checkout"
        type: string
        default: ""
    secrets:
      AWS_ROLE:
        required: true
      AWS_REGION:
        required: true
      REGISTRY:
        required: true
      S3_BUCKET_NAME:
        required: true
permissions: {} # No permissions by default on workflow level

jobs:
  package-distribution-workflow:
    name: Build platform distribution binaries
    runs-on: ubuntu-latest
    if: ${{ inputs.build_all }}
    permissions:
      contents: read
      id-token: write
    env:
      TAG: ${{ inputs.build_version }}
      PLATFORM_VERSION: ${{ inputs.platform_version }}
      REGISTRY: ${{ secrets.REGISTRY }}
    steps:
      - name: Harden the runner (audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          ref: ${{ inputs.ref || '' }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: Github
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1

      - name: Build umbrella charts
        run: make build-umbrella-chart

      - name: Publish umbrella charts
        if: ${{ inputs.publish_binaries }}
        run: make publish-umbrella-chart

      - name: Build installer binary
        if: ${{ inputs.publish_binaries }}
        working-directory: platform/services/installer
        run: |
          printf "product_version: %s\nproduct_build: %s\n" "$PLATFORM_VERSION" "$TAG" > app/version.yaml
          make build

      - name: Publish the installer binary to S3
        if: ${{ inputs.publish_binaries }}
        working-directory: platform/services/installer
        shell: bash
        env:
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
        run: |
          tar -czf platform_installer.tar.gz platform_$TAG
          aws s3 cp platform_installer.tar.gz s3://$S3_BUCKET_NAME/v$TAG/
