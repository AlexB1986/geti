---
apiVersion: batch/v1
kind: Job
metadata:
  name: "init-job-{{ .Chart.Name }}"
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: {{ .Chart.Name }}
spec:
  backoffLimit: 3
  template:
    metadata:
      {{- if not .Values.global.istio_ambient_mesh }}
      annotations:
        proxy.istio.io/config: '{ "holdApplicationUntilProxyStarts": true }'
      {{- end }}
      labels:
        app: {{ .Chart.Name }}
    spec:
      {{- if .Values.global.enable_local_image_pull_secret }}
      imagePullSecrets:
        - name: regcred
      {{- end }}
      restartPolicy: Never
      initContainers:
        - name: init-seaweedfs
          image: "{{ .Values.global.busybox.registry }}/{{ if .Values.global.busybox.repository }}{{ .Values.global.busybox.repository }}/{{ end }}{{ .Values.global.busybox.name }}"
          imagePullPolicy: {{ .Values.init.imagePullPolicy }}
          command: [ 'sh', '-c', "until nc -w 5 -z {{ .Release.Namespace }}-seaweed-fs 8333; do echo wait...; sleep 2; done;" ]
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
      containers:
        - name: "bucket"
          image: "{{ .Values.global.registry_address }}/{{ .Values.global.docker_namespace }}/migration-job:{{ .Values.global.tag }}"
          command: [ "/bin/sh", "-c" ]
          args:
            - >-
              create_s3_bucket;
              retVal=$?;
              {{- if not .Values.global.istio_ambient_mesh }}
              curl -XPOST 127.0.0.1:15020/quitquitquit;
              {{- end }}
              exit $retVal
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          env:
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Namespace }}-seaweed-fs"
                  key: "admin_access_key"
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Namespace }}-seaweed-fs"
                  key: "admin_secret_key"
            - name: S3_ADDRESS
              value: "http://{{ .Values.global.s3_endpoint }}"
            - name: S3_BUCKET
              value: "{{ .Values.tempo.storage.trace.s3.bucket }}"
